#!/usr/bin/env perl
# PODNAME: rshasum

use 5.016;
use strict;
use warnings;

use App::rshasum ();

App::rshasum->run;

=head1 NAME

rshasum - recursive shasum.

=head1 SYNOPSIS

    rshasum --digest=SHA-256
    rshasum --digest=SHA-256 --skip='\.sw[a-zA-Z]*\z' --skip='~\z'
    rshasum --digest=SHA-256 --start-path='/home/random-j-user'

=head1 DESCRIPTION

A recursive digest calculator that prints digests for all files
in a directory tree, as well as a total, summary digest of the output.

=head1 FLAGS

=head2 --digest

The digest algorithm to use. Required. E.g:

    --digest=SHA-256
    --digest=SHA-512
    --digest=MD5

=head2 --skip

Perl 5 regexes which when matched against the relative path,
skips and prunes them.

Can be specified more than one time.

=head2 --start-path

The start path for the traversal. Defaults to "." (the
current working directory).

=head1 SEE ALSO

L<https://github.com/rhash/RHash> - "recursive hash". Seems to emit the
tree in an unpredictable, not-always-sorted order.

L<https://www.shlomifish.org/open-source/projects/File-Dir-Dumper/> - also
on CPAN, dumps metadata and supports caching the digests.

L<https://github.com/gokyle/rshasum> - written in golang, but slurps
entire files into memory (see L<https://github.com/gokyle/rshasum/issues/1> ).

=cut
